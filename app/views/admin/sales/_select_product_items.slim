- @products.each do |product|
  - all_prices = product.product_prices
  - all_prices_arr = all_prices.map{|first_price| {title: first_price.price, id: first_price.id} }
  - curr_price = params[:type_sale] != "opt" ? all_prices.curr_default_id : all_prices.curr_opt_id
  div id="select#{product.id}"
    - product_items = product.product_items.all_present(current_magazine.id)
    - all_product_items = product_items.includes(:product_item_magazine_prices, :product).eager_load(:product_item_magazine_prices, :product).map do |item|
      - curr_pimp = item.product_item_magazine_prices.select{|pimp| pimp.magazine_id == current_magazine.id}.last
      - {title: item.title, id: item.id, add_data: {'data-barcode' => item.barcode, 'data-product' => product.id, 'data-price_id' => (curr_pimp.present? ? curr_pimp.price_id : item.product.current_price_model.id), 'data-deff_price' => curr_price} }

    - all_product_items = all_product_items.sort {|a,b| a[:title] <=> b[:title]}
    = render "common_select_new", {arr_li: all_product_items, default: all_product_items.first[:id], add_class: "noInit selectProductItem", name_input: "sales[][item_id]", class_input: 'changeSelectContent changeSelectProductItem'}
    
    = render "common_select_new", {arr_li: all_prices_arr, default: all_prices_arr.first[:id], add_class: "noInit selectProductPrice", name_input: "sales[][price_id]", class_input: 'changeSelectContent selectPrice'}